<UserControl x:Class="AwesomeTodo.Module.Calendar.Views.CalendarView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>

    </UserControl.Resources>
    <Border CornerRadius="6" Margin="10" Padding="0">
        <DockPanel>
            <Grid DockPanel.Dock="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" MaxWidth="180" />
                    <ColumnDefinition Width="*" MaxWidth="180" />
                </Grid.ColumnDefinitions>
                <ComboBox Grid.Column="0" Style="{DynamicResource ComboBoxStyle1}" ItemsSource="{ Binding Path=Years }" SelectedItem="{ Binding Path=SelectedYear }" DockPanel.Dock="Left" Margin="0, 0, 0.5, 0">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{ Binding Path=SelectYearCommand }" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <ComboBox Grid.Column="1" Style="{DynamicResource ComboBoxStyle1}" ItemsSource="{ Binding Path=Months }" SelectedItem="{ Binding Path=SelectedMonth }" DockPanel.Dock="Left" Margin="0.5, 0, 0, 0">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{ Binding Path=SelectMonthCommand }" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
            </Grid>
            <UniformGrid DockPanel.Dock="Top" Rows="1" Columns="{ Binding Path=ColumnCount }">
                <Label Grid.Column="0" Content="Mo" FontFamily="{ StaticResource CustomFont }" Foreground="{ StaticResource LightGrayForegroundBrush }" FontSize="10" FontWeight="Bold" Height="25" Margin="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <Label Grid.Column="1" Content="Tu" FontFamily="{ StaticResource CustomFont }" Foreground="{ StaticResource LightGrayForegroundBrush }" FontSize="10" FontWeight="Bold" Height="25" Margin="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <Label Grid.Column="2" Content="We" FontFamily="{ StaticResource CustomFont }" Foreground="{ StaticResource LightGrayForegroundBrush }" FontSize="10" FontWeight="Bold" Height="25" Margin="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <Label Grid.Column="3" Content="Th" FontFamily="{ StaticResource CustomFont }" Foreground="{ StaticResource LightGrayForegroundBrush }" FontSize="10" FontWeight="Bold" Height="25" Margin="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <Label Grid.Column="4" Content="Fr" FontFamily="{ StaticResource CustomFont }" Foreground="{ StaticResource LightGrayForegroundBrush }" FontSize="10" FontWeight="Bold" Height="25" Margin="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <Label Grid.Column="5" Content="Sa" FontFamily="{ StaticResource CustomFont }" Foreground="{ StaticResource LightGrayForegroundBrush }" FontSize="10" FontWeight="Bold" Height="25" Margin="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                <Label Grid.Column="6" Content="Su" FontFamily="{ StaticResource CustomFont }" Foreground="{ StaticResource LightGrayForegroundBrush }" FontSize="10" FontWeight="Bold" Height="25" Margin="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
            </UniformGrid>
            <DockPanel>
                <!--<Border.Background>
                    <ImageBrush ImageSource="pack://application:,,,/AwesomeTodo.Shared;component/Images/pattern.png" TileMode="Tile" ViewportUnits="Absolute" Viewport="0, 0, 10, 10" />
                </Border.Background>-->
                <Border DockPanel.Dock="Top">
                    <ListView ItemsSource="{ Binding Path=CalendarItems }" SelectedItem="{ Binding Path=SelectedCalendarItem }" Margin="0" Padding="0" Background="Transparent" BorderBrush="Transparent">
                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Add event" Command="{ Binding Path=OpenAddCalendarEventDialogCommand }" CommandParameter="{ Binding Path=PlacementTarget.SelectedItem, RelativeSource={ RelativeSource AncestorType={ x:Type ContextMenu }}}" />
                            </ContextMenu>
                        </ListView.ContextMenu>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{ x:Type ListViewItem }">
                                <Setter Property="Margin" Value="0" />
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Rows="{ Binding Path=RowCount }" Columns="{ Binding Path=ColumnCount }" />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Border CornerRadius="2" Padding="0" Margin="2" Height="50" VerticalAlignment="Top">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="8" Direction="270" Opacity="0.4" Color="Black" />
                                    </Border.Effect>
                                    <Border.Style>
                                        <Style TargetType="{ x:Type Border }">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{ Binding Path=IsCurrentMonth }" Value="True">
                                                    <Setter Property="Background" Value="{ StaticResource InverseButtonBorderGradientStyle }" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{ Binding Path=IsCurrentMonth }" Value="False">
                                                    <Setter Property="Background" Value="{ StaticResource DarkGrayBrush }" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{ Binding Path=IsCurrentDate }" Value="True">
                                                    <Setter Property="BorderBrush" Value="{ StaticResource AccentBrush }" />
                                                    <Setter Property="BorderThickness" Value="4" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{ Binding Path=IsCurrentDate }" Value="False">
                                                    <Setter Property="BorderBrush" Value="{ StaticResource ButtonBorderGradientStyle }" />
                                                    <Setter Property="BorderThickness" Value="1" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Button Margin="1" BorderThickness="0" Background="Transparent" Cursor="Hand" IsHitTestVisible="False" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                                        <Grid>
                                            <Label Content="{ Binding Path=DisplayDate }" Foreground="{ StaticResource MediumGrayForegroundBrush }" HorizontalAlignment="Left" VerticalAlignment="Top" FontWeight="SemiBold" FontSize="13" FontFamily="{ StaticResource CustomFont }" Margin="1" Padding="0" />

                                            <Border>
                                                <Border.Style>
                                                    <Style TargetType="{ x:Type Border }">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{ Binding Path=HasEvents }" Value="True">
                                                                <Setter Property="Visibility" Value="Visible" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{ Binding Path=HasEvents }" Value="False">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                                <fa:IconImage Icon="Clock" Foreground="{ StaticResource AccentBrush }" VerticalAlignment="Center" HorizontalAlignment="Center" Width="20" Height="20" />
                                            </Border>
                                        </Grid>
                                    </Button>
                                </Border>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Border>
                <ListView DockPanel.Dock="Top" ItemsSource="{ Binding SelectedCalendarItem.Events }" ItemContainerStyle="{ StaticResource CalendarEventsListViewItem }" DisplayMemberPath="Title" Margin="0, 8, 0, 0">
                    <ListView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Edit" Command="{ Binding Path=OpenEditCalendarEventDialogCommand }" CommandParameter="{ Binding Path=PlacementTarget.SelectedItem, RelativeSource={ RelativeSource AncestorType={ x:Type ContextMenu }} }" />
                            <MenuItem Header="Remove" Command="{ Binding Path=RemoveCalendarEventCommand }" CommandParameter="{ Binding Path=PlacementTarget.SelectedItem, RelativeSource={ RelativeSource AncestorType={ x:Type ContextMenu }} }" />
                        </ContextMenu>
                    </ListView.ContextMenu>
                </ListView>
            </DockPanel>
        </DockPanel>
    </Border>
</UserControl>
